<?php

namespace App\DataTables;

use App\Patient;
use App\User;
use Yajra\Datatables\Services\DataTable;

/**
 * Class PatientTable
 * -----------------------------
 * 
 * -----------------------------
 * @package App\DataTables
 * @author Selcuk Kekec <senycorp@googlemail.com>
 */
class PatientTable extends DataTable
{
    // protected $printPreview  = 'path.to.print.preview.view';

    /**
     * Display ajax response.
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function ajax()
    {
        return $this->datatables
            ->eloquent($this->query())
            /**
             * <tr id={}>
             */
            ->setRowId(function($model) {return $model->id;})
            /**
             * <tr arrayKey=arrayValue
             */
            ->setRowAttr(['data-id' => ''])
            /*->setRowClass(function($model) {
                if ($model->id == 1) return 'bg-blue';

                return 'bg-yellow';
            })*/
            ->with('index','test')
            ->addColumn('action', function ($model) {
                return '<a href="'.route('patient.show', ['id' => $model->id]).'" class="btn btn-default"><i class="fa fa-link"></i> Show</a>';
            })
            ->addColumn('image', function($model) {
                return '<img src="'.$model->getImageUrl().'" width="50" height="width"/>';
            })
            ->make(true);
    }

    /**
     * Get the query object to be processed by datatables.
     *
     * @return \Illuminate\Database\Query\Builder|\Illuminate\Database\Eloquent\Builder
     */
    public function query()
    {
        $patients = Patient::query();

        return $this->applyScopes($patients);
    }

    /**
     * Optional method if you want to use html builder.
     *
     * @return \Yajra\Datatables\Html\Builder
     */
    public function html()
    {
        return $this->builder()
                    ->addColumn([
                        'defaultContent' => 'No',
                        'data'           => 'image',
                        'name'           => 'Image',
                        'title'          => '',
                        'render'         => null,
                        'orderable'      => false,
                        'searchable'     => false,
                        'exportable'     => false,
                        'printable'      => true,
                        'footer'         => '',
                        'style'          => ''
                    ])
                    ->columns($this->getColumns())
                    ->ajax('')
                    ->addAction(['width' => '80px'])
                    ->parameters($this->getBuilderParameters());
    }
    
    public function getBuilderParameters()
    {
        return array_merge(parent::getBuilderParameters(), [
            'order'   => [[1, 'asc']],
            'responsive' => true,
            "initComplete" => 'function(settings, json) {
                $("#patientTable_filter input").detach().appendTo($("#patientTable_filter").parent()).
                    parent().append(\'<div class="input-group-btn"><button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button></div>\');
                    $("#patientTable_filter").detach();
                $(\'#patientTable_processing\').attr(\'class\', \'alert alert-info text-bold\').html("<i class=\"fa fa-cog\"></i> Loading").attr("style", "display: block; position: absolute; left: 50%;");
            }',
            'dom' => "<'box'<'box-header with-border'lr<'box-tools'<'input-group input-group-sm'f>>><'box-body no-padding't><'box-footer clearfix'p>>'",
            'language' => [
                'paginate' => [
                    'next' => '&raquo;',
                    'previous' => '&laquo;'
                ],
                "lengthMenu" => "<div class=''>_MENU_ entries</div>",
                "zeroRecords" => "<span class='label label-danger'><i class='fa fa-times'></i> No records found...</span>",
                "info" => "Showing page _PAGE_ of _PAGES_",
                "infoEmpty" => "<span class='label label-danger'><i class='fa fa-times'></i> No records available...</span>",
                "infoFiltered" => "(filtered from _MAX_ total records)"
            ]
        ]); // TODO: Change the autogenerated stub
    }

    /**
     * Get columns.
     *
     * @return array
     */
    private function getColumns()
    {
        return [
            'id',
            'firstname',
            'lastname',
            'street',
            'phone',
            'mobile',
            'email',
            'created_at',
            'updated_at',
        ];
    }

    /**
     * Get filename for export.
     *
     * @return string
     */
    protected function filename()
    {
        return 'patients';
    }
}
