<?php namespace KekecMed\Patient\Http\Controllers;

use App\Http\Requests;
use Illuminate\Database\Eloquent\Model;
use Illuminate\View\View;
use KekecMed\Core\Http\Controllers\CoreConventionalResourceViewController;
use KekecMed\Core\Http\Controllers\CoreDataTableController;
use KekecMed\Core\Http\Controllers\CoreValidationController;
use KekecMed\Insurance\Entities\Insurance;
use KekecMed\Patient\Entities\Patient;

class PatientController extends CoreConventionalResourceViewController
    implements CoreDataTableController, CoreValidationController
{

    /**
     * Get DataTable
     *
     * @return \KekecMed\Core\Http\Controllers\DataTable
     */
    public function getDataTable()
    {
        return app('KekecMed\Patient\DataTables\PatientTable');
    }

    /**
     * Get DataTable index template
     *
     * 'module::index'
     *
     * @return string
     */
    public function getDataTableTemplatePath()
    {
        return 'patient::index';
    }

    /**
     * Get model class
     *
     * @return Model
     */
    protected function getModelClass()
    {
        return Patient::class;
    }

    /**
     * Get model for create()
     *
     * @return Model
     */
    public function getModelForCreate()
    {
        $model = $this->getModel();
        $model->insurance = new Insurance();

        return $model;
    }


    /**
     * Get Module identifier
     *
     * @return string
     */
    protected function getIdentifier()
    {
        return 'patient';
    }

    /**
     * Get Validation rules
     *
     * @return array
     */
    public function getValidationRules()
    {
        // TODO: Implement validation rules

        return [];
    }

    /**
     * Executed before index
     *
     * @return mixed
     */
    protected function beforeIndex()
    {
        // TODO: Implement beforeIndex() method.
    }

    /**
     * Execute before store()
     *
     * @param array $data
     * @return mixed
     */
    protected function beforeStore(array $data)
    {
        // TODO: Implement beforeStore() method.
    }

    /**
     * Execute after store()
     *
     * @param Model $model
     * @return mixed
     */
    protected function afterStore(Model $model)
    {
        // TODO: Implement afterStore() method.
    }

    /**
     * Before update()
     *
     * @param $id
     * @param $data
     * @return mixed
     */
    protected function beforeUpdate($id, $data)
    {
        // TODO: Implement beforeUpdate() method.
    }

    /**
     * Show / Hide edit button
     *
     * @return boolean
     */
    public function showEditButton()
    {
        // TODO: Implement showEditButton() method.
    }

    protected function beforeCreate(Model $model, View $view)
    {
        // TODO: Change the autogenerated stub
    }


}